{"name":"Gladiator","tagline":"A slave fragment to execute commands in a background thread and deliver results back to the correct fragment instance","body":"### Introduction\r\nA slave fragment to execute commands in a background thread and deliver results back to the correct fragment instance.\r\n\r\nIt is based on RxAndroid, so there is potential to grow with with it.\r\n\r\n1. Extend from `com.mostafagazar.gladiator.BaseFragment` or copy it is basic content into your own BaseFragment\r\n2. Call `runOnBackgroundThread` and be certain that it is going to return the result back to the correct fragment, if the calling fragment got destroyed because of device orientation change for example.\r\n\r\nComplete example:\r\n```java\r\nrunOnBackgroundThread(new MyCommand(), new MyCallback());\r\n\r\nprivate static class MyCommand implements GladiatorFragment.ICommand<Boolean> {\r\n    @Override\r\n    public Boolean execute(Subscriber<? super Boolean> subscriber) {\r\n        try {\r\n            // Some serious work in progress!\r\n            Thread.sleep(5000);\r\n            return true;\r\n        } catch (InterruptedException e) {\r\n            subscriber.onError(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nprivate static class MyCallback implements GladiatorFragment.ICallback<MainActivityFragment, Boolean> {\r\n    @Override\r\n    public void onNext(MainActivityFragment fragment, Boolean result) {\r\n        Toast.makeText(fragment.getContext(), \"onNext\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onError(MainActivityFragment fragment, Throwable e) {\r\n        Toast.makeText(fragment.getContext(), \"onError\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onComplete(MainActivityFragment fragment) {\r\n        Toast.makeText(fragment.getContext(), \"onComplete\", Toast.LENGTH_SHORT).show();\r\n    }\r\n}\r\n```\r\n\r\n### Download\r\n\r\n[![Maven Central](https://img.shields.io/maven-central/v/com.mostafagazar/gladiator.svg)](http://search.maven.org/#search%7Cga%7C1%7Cgladiator)\r\n```groovy\r\ndependencies {\r\n    ...\r\n    compile 'com.mostafagazar:gladiator:1.0.0'\r\n    ...\r\n}\r\n```\r\n\r\n### Proguard\r\n\r\nIf you're using proguard for code shrinking and obfuscation, make sure to add the following:\r\n```proguard\r\n   -keep class com.mostafagazar.** { *; }\r\n```\r\n\r\n### Support or Contact\r\n\r\nHaving trouble or want a new feature? Get in touch or create an issue https://github.com/MostafaGazar/CustomShapeImageView/issues\r\n\r\n### License\r\n\r\nCopyright 2016 Mostafa Gazar\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","google":"UA-73406036-1","note":"Don't delete this file! It's used internally to help with page regeneration."}